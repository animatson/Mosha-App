
"""Initial migration

Revision ID: d517658fcb61
Revises: 
Create Date: 2025-08-10 18:37:25.607602

"""
from werkzeug.security import generate_password_hash
from sqlalchemy.sql import table, column
from sqlalchemy import String, Integer, Boolean
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd517658fcb61'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_alembic_tmp_user')
    with op.batch_alter_table('madeni', schema=None) as batch_op:
        batch_op.alter_column('phone',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=20),
               existing_nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), server_default=sa.text('0'), nullable=False))
        batch_op.add_column(sa.Column('position_as', sa.String(length=150), nullable=True))
        batch_op.add_column(sa.Column('phone_no', sa.String(length=20), server_default='0000000000', nullable=False))
        batch_op.add_column(sa.Column('shift_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_user_shift_id', 'shift', ['shift_id'], ['id'])

    # Insert hardcoded admin user
    user_table = table('user',
        column('id', Integer),
        column('name', String),
        column('email', String),
        column('is_active', Boolean),
        column('position_as', String),
        column('phone_no', String),
        column('password', String),
        column('shift_id', Integer)
    )

    op.bulk_insert(user_table,
        [
            {
                'id': 1,
                'name': 'Admin',
                'email': 'anicetysanya@gmail.com',
                'is_active': True,
                'position_as': '',
                'phone_no': '0000000000',
                'password': generate_password_hash('sani'),
                'shift_id': None
            }
        ]
    )


    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint('fk_user_shift_id', type_='foreignkey')
        batch_op.drop_column('shift_id')
        batch_op.drop_column('phone_no')
        batch_op.drop_column('position_as')
        batch_op.drop_column('is_active')

    with op.batch_alter_table('madeni', schema=None) as batch_op:
        batch_op.alter_column('phone',
               existing_type=sa.String(length=20),
               type_=sa.INTEGER(),
               existing_nullable=False)

    op.create_table('_alembic_tmp_user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), nullable=False),
    sa.Column('email', sa.VARCHAR(length=150), nullable=False),
    sa.Column('password', sa.VARCHAR(length=150), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('0'), nullable=False),
    sa.Column('position_as', sa.VARCHAR(length=150), nullable=True),
    sa.Column('phone_no', sa.INTEGER(), nullable=False),
    sa.Column('shift_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['shift_id'], ['shift.id'], name=op.f('fk_user_shift_id')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    # ### end Alembic commands ###
